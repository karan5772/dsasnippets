// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum Dificulty {
  EASY
  MEDIUM
  HARD
}

model User {
  id        String   @id @default(uuid())
  name      String?
  email     String   @unique
  image     String?
  role      UserRole @default(USER)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  problem Problem[]
}

model Problem {
  id          String    @id @default(uuid())
  title       String
  discription String
  dificulty   Dificulty
  tags        String[]
  userId      String

  constraints String
  hints       String?
  editorial   String?
  examples    Json

  testcases          Json
  codeSnipet         Json //Supported Langauges
  referenceSolutions Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade) // relates to the User model in the schem, it takes the user id and also, these probluma will be deleted once the user is deleted.
}
